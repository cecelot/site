---
import PostCard from "../../components/NodeCard.astro";
import { getCollection } from "astro:content";
import Base from "../../layouts/Base.astro";

interface Props {
  nodes: any[];
}

export async function getStaticPaths() {
  const allNodes = await getCollection("nodes");
  const uniqueTags = [
    ...new Set(
      allNodes
        .map((node) => node.data.tags)
        .flat()
        .filter((s) => typeof s !== "undefined")
    ),
  ];
  return uniqueTags.map((tag) => {
    const filteredNodes = allNodes.filter((node) =>
      node.data.tags?.includes(tag)
    );
    return {
      params: { tag },
      props: { nodes: filteredNodes },
    };
  });
}

const { tag } = Astro.params;
const { nodes } = Astro.props;
const sortedNodes = nodes
  .sort((a, b) => (a.data.pubDate > b.data.pubDate ? 1 : -1))
  .reverse();
console.log(sortedNodes.map((node) => node.data.pubDate));
console.log(sortedNodes.map((node) => node.data.title));
---

<Base pageTitle={`#${tag}`} description={`Nodes tagged with #${tag}`}>
  <h1 class="text-3xl font-bold mt-3 mb-2"><a href="/tags">Tags</a>/{tag}</h1>
  <p class="mb-5">
    Nodes tagged with <code>#{tag}</code>
  </p>
  <ul class="space-y-3">
    {
      sortedNodes.map((node) => (
        <li>
          <PostCard
            title={node.data.title}
            description={node.data.description}
            date={node.data.pubDate ? new Date(node.data.pubDate) : undefined}
            url={`/node/${node.slug}`}
            featured={node.data.featured}
            draft={node.data.draft}
          />
        </li>
      ))
    }
  </ul>
</Base>
