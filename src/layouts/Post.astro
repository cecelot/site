---
import type { Props } from "../types";
import Base from "./Base.astro";

const { frontmatter } = Astro.props;

let pathname = new URL(Astro.url).pathname.replace("/p/", "").trim();
if (pathname.endsWith("/")) {
  pathname = pathname.slice(0, -1);
}

const editLink = `https://github.com/cecelot/forest/edit/drafts/src/content/blog/${pathname}.md`;
---

<Base pageTitle={frontmatter.title} description={frontmatter.description}>
  {frontmatter.draft && <span class="text-peach text-xl">draft</span>}
  <h1 class="text-4xl lg:text-5xl font-black">{frontmatter.title}</h1>
  <h2 class="text-md lg:text-xl font-medium mb-3 mt-2">
    {frontmatter.description}
  </h2>
  <span class="flex flex-wrap font-light">
    <p class="mr-1">{new Date(frontmatter.pubDate).toDateString()}</p>
    <p class="mr-1">•</p>
    <p>{frontmatter.minutesRead}</p>
  </span>
  <article class="prose lg:prose-lg leading-6 mt-5">
    <slot />
  </article>
  <ul class="my-5 flex flex-wrap gap-y-5">
    {
      frontmatter.tags.map((tag) => (
        <li>
          <span>
            <a
              class="ignored-link bg-mantle p-2 mr-2 mx-auto rounded-lg hover:bg-crust transition-all"
              href={`/tags/${tag}`}
            >
              #{tag}
            </a>
          </span>
        </li>
      ))
    }
  </ul>
  <a
    class="ignored-link text-xs text-subtext0 hover:text-subtext1 underline"
    href={editLink}
    >✎ Edit on GitHub
  </a>
</Base>
<style>
  .tag-foot {
    @apply text-text no-underline hover:text-text;
  }

  .sr-only {
    @apply hidden;
  }
</style>
